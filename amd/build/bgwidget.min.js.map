{"version":3,"file":"bgwidget.min.js","sources":["../src/bgwidget.js"],"sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery', 'jqueryui'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('jquery'), require('jquery-ui-dist'));\n  } else {\n    root.bgwidget = factory(root.jQuery);\n  }\n}(typeof self !== 'undefined' ? self : this, function ($) {\n  \n  function initialize() {\n    var bot_id = $(\"#chat-widget\").data(\"bot_id\");\n    var env = $(\"#chat-widget\").data(\"env\");\n    var user_name = $(\"#chat-widget\").data(\"user_name\");\n    var bot_name = $(\"#chat-widget\").data(\"bot_name\");\n    var api_base_url = $(\"#chat-widget\").data(\"api_base_url\");\n\n    const SUCCESS_CONECTION_MESSAGE = M.util.get_string(\n      \"success_connection_message\",\n      \"block_bgwidget\"\n    );\n    const CONECTION_FAILURE_MESSAGE = M.util.get_string(\n      \"connection_failure_message\",\n      \"block_bgwidget\"\n    );\n    const SEND_MESSAGE_FAILURE_MESSAGE = M.util.get_string(\n      \"send_message_failure_message\",\n      \"block_bgwidget\"\n    );\n    const CHANNEL_ACRONYM = \"MO\";\n\n    var tokenKey = \"chatToken_\" + bot_id;\n    var messagesKey = \"chatMessages_\" + bot_id;\n    var token = sessionStorage.getItem(tokenKey) || \"\";\n    var messages = JSON.parse(sessionStorage.getItem(messagesKey)) || [];\n    let isExpanded = false;\n\n    // Guardar el tamaño original del widget para restaurarlo después\n    var originalSize = {\n      width: $(\"#chat-widget\").width(),\n      height: $(\"#chat-widget\").height(),\n    };\n\n    // Obtener el tamaño guardado o usar el tamaño original\n    var initialWidth =\n      sessionStorage.getItem(\"widgetWidth\") || originalSize.width;\n    var initialHeight =\n      sessionStorage.getItem(\"widgetHeight\") || originalSize.height;\n\n    // Hacer que el widget sea draggable cuando esté expandido\n    $(\"#chat-move-toggle\").on(\"click\", function () {\n      isExpanded = !isExpanded;\n\n      // Cambiar la clase expanded\n      $(\"#chat-widget\").toggleClass(\"expanded\", isExpanded);\n\n      if (isExpanded) {\n        // Hacerlo draggable si está expandido\n        $(\"#chat-widget\").draggable({\n          containment: \"window\",\n          scroll: false,\n        });\n\n        // Hacerlo resizable si está expandido\n        $(\"#chat-widget\").resizable({\n          handles: \"n, e, s, w, ne, se, sw, nw\",\n          stop: function (event, ui) {\n            sessionStorage.setItem(\"widgetWidth\", ui.size.width);\n            sessionStorage.setItem(\"widgetHeight\", ui.size.height);\n          },\n        });\n\n        $(\"#chat-widget\").css({\n          position: \"fixed\",\n          width: initialWidth,\n          height: initialHeight,\n        });\n\n        $(this).find(\"i\").removeClass(\"fa-expand\").addClass(\"fa-compress\");\n      } else {\n        $(\"#chat-widget\").draggable(\"destroy\");\n        $(\"#chat-widget\").resizable(\"destroy\");\n        $(\"#chat-widget\").width(originalSize.width);\n        $(\"#chat-widget\").height(originalSize.height);\n        $(\"#chat-widget\").css({\n          position: \"static\",\n        });\n\n        $(this).find(\"i\").removeClass(\"fa-compress\").addClass(\"fa-expand\");\n      }\n    });\n\n    loadPreviousMessages();\n    if (!token) {\n      initializeChat();\n    }\n    setupEventListeners();\n\n    function loadPreviousMessages() {\n      if (messages.length > 0) {\n        messages.forEach(function (message) {\n          addMessage(message.sender, message.content, message.isUser);\n        });\n      }\n    }\n\n    function setupEventListeners() {\n      $(\"#chat-send\").on(\"click\", function () {\n        handleSendMessage();\n      });\n\n      $(\"#chat-input\").on(\"keypress\", function (e) {\n        if (e.which === 13) {\n          handleSendMessage();\n        }\n      });\n\n      $(\"#chat-reset\").on(\"click\", function () {\n        resetChat();\n      });\n    }\n\n    function initializeChat() {\n      var data = {\n        bot_id: bot_id,\n        env: env,\n        channel: CHANNEL_ACRONYM,\n        username: stringToHex(user_name),\n      };\n\n      sendPostRequest(\n        api_base_url + \"/secure/api/connect\",\n        data,\n        handleChatConnectSuccess,\n        function () {\n          showError(CONECTION_FAILURE_MESSAGE);\n        }\n      );\n    }\n\n    function handleChatConnectSuccess(connectResponse) {\n      token = connectResponse.data[\"token\"];\n      sessionStorage.setItem(tokenKey, token);\n      var initialMessage =\n        connectResponse.data[\"initial_response\"] || SUCCESS_CONECTION_MESSAGE;\n      $(\"#loading-icon\").css(\"display\", \"none\");\n      addMessage(bot_name, initialMessage, false);\n      storeMessage(bot_name, initialMessage, false);\n    }\n\n    function handleSendMessage() {\n      var userMessage = $(\"#chat-input\").val().trim();\n      if (userMessage === \"\") {\n        return;\n      }\n\n      addMessage(user_name, userMessage, true);\n      storeMessage(user_name, userMessage, true);\n\n      var data = {\n        user_input: userMessage,\n        env: env,\n      };\n\n      sendPostRequest(\n        api_base_url + \"/secure/api/message\",\n        data,\n        function (botResponse) {\n          addMessage(bot_name, botResponse.data.text, false);\n          storeMessage(bot_name, botResponse.data.text, false);\n        },\n        function () {\n          showError(SEND_MESSAGE_FAILURE_MESSAGE);\n        }\n      );\n\n      $(\"#chat-input\").val(\"\");\n    }\n\n    function resetChat() {\n      $(\"#chat-messages .message\").remove();\n      $(\"#loading-icon\").css(\"display\", \"block\");\n\n      sessionStorage.removeItem(tokenKey);\n      sessionStorage.removeItem(messagesKey);\n      token = \"\";\n      messages = [];\n      initializeChat();\n    }\n\n    function sendPostRequest(url, data, onSuccess, onError) {\n      $.ajax({\n        url: url,\n        type: \"POST\",\n        contentType: \"application/json\",\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n        data: JSON.stringify(data),\n        success: function (response) {\n          if (onSuccess) {\n            onSuccess(response);\n          }\n        },\n        error: function () {\n          if (onError) {\n            onError();\n          }\n        },\n      });\n    }\n\n    function addMessage(sender, content, isUser) {\n      var messageDiv = $(\"<div></div>\")\n        .addClass(\"message p-2 mb-2 rounded\")\n        .html(\"<strong>\" + sender + \":</strong> \" + content);\n\n      if (isUser) {\n        messageDiv.addClass(\"bg-primary text-white\");\n      } else {\n        messageDiv.addClass(\"bg-light text-dark\");\n      }\n\n      $(\"#chat-messages\").append(messageDiv);\n      $(\"#chat-messages\").scrollTop($(\"#chat-messages\")[0].scrollHeight);\n    }\n\n    function storeMessage(sender, content, isUser) {\n      messages.push({ sender: sender, content: content, isUser: isUser });\n      sessionStorage.setItem(messagesKey, JSON.stringify(messages));\n    }\n\n    function showError(errorMessage) {\n      addMessage(bot_name, errorMessage, false);\n    }\n\n    function stringToHex(str) {\n      if (!str) {\n        return \"\";\n      }\n\n      let hex = \"\";\n      for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16);\n      }\n      return hex;\n    }\n  }\n\n  return {\n    init: initialize,\n  };\n}));\n"],"names":["root","factory","self","this","$","init","bot_id","data","env","user_name","bot_name","api_base_url","SUCCESS_CONECTION_MESSAGE","M","util","get_string","CONECTION_FAILURE_MESSAGE","SEND_MESSAGE_FAILURE_MESSAGE","tokenKey","messagesKey","token","sessionStorage","getItem","messages","JSON","parse","isExpanded","originalSize","width","height","initialWidth","initialHeight","initializeChat","channel","username","stringToHex","sendPostRequest","handleChatConnectSuccess","showError","connectResponse","setItem","initialMessage","css","addMessage","storeMessage","handleSendMessage","userMessage","val","trim","user_input","botResponse","text","url","onSuccess","onError","ajax","type","contentType","headers","Authorization","stringify","success","response","error","sender","content","isUser","messageDiv","addClass","html","append","scrollTop","scrollHeight","push","errorMessage","str","hex","i","length","charCodeAt","toString","on","toggleClass","draggable","containment","scroll","resizable","handles","stop","event","ui","size","position","find","removeClass","forEach","message","e","which","remove","removeItem","define","amd","module","exports","require","bgwidget","jQuery"],"mappings":"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"}