{"version":3,"file":"chatConfig.min.js","sources":["../src/chatConfig.js"],"sourcesContent":["define('chatConfig', ['jquery'], function($) {\n  /**\n   * Object that stores the chat configuration.\n   * @type {Object}\n   */\n  const chatConfig = {\n    bot_id: null,\n    env: null,\n    api_token: null,\n    user_name: null,\n    bot_name: null,\n    api_base_url: null,\n    SUCCESS_CONECTION_MESSAGE: null,\n    CONECTION_FAILURE_MESSAGE: null,\n    SEND_MESSAGE_FAILURE_MESSAGE: null,\n    CHANNEL_ACRONYM: \"MO\",\n    tokenKey: null,\n    messagesKey: null,\n    token: \"\",\n    messages: [],\n    isPinned: true\n  };\n\n  // Constants for sessionStorage keys\n  const SESSION_STORAGE_KEYS = {\n    TOKEN: \"chatToken_\",\n    MESSAGES: \"chatMessages_\"\n  };\n\n  // Constants for message keys\n  const MESSAGE_KEYS = {\n    SUCCESS: \"success_connection_message\",\n    FAILURE: \"connection_failure_message\",\n    SEND_FAILURE: \"send_message_failure_message\"\n  };\n\n  /**\n   * Sets the chat configuration variables from DOM data.\n   */\n  function setChatConfig() {\n    chatConfig.bot_id = getDataAttribute(\"#chat-widget\", \"bot_id\");\n    chatConfig.env = getDataAttribute(\"#chat-widget\", \"env\");\n    chatConfig.api_token = getDataAttribute(\"#chat-widget\", \"api_token\");\n    chatConfig.user_name = getDataAttribute(\"#chat-widget\", \"user_name\");\n    chatConfig.bot_name = getDataAttribute(\"#chat-widget\", \"bot_name\");\n    chatConfig.api_base_url = getDataAttribute(\"#chat-widget\", \"api_base_url\");\n\n    chatConfig.SUCCESS_CONECTION_MESSAGE = M.util.get_string(\n      MESSAGE_KEYS.SUCCESS,\n      \"block_bgwidget\"\n    );\n    chatConfig.CONECTION_FAILURE_MESSAGE = M.util.get_string(\n      MESSAGE_KEYS.FAILURE,\n      \"block_bgwidget\"\n    );\n    chatConfig.SEND_MESSAGE_FAILURE_MESSAGE = M.util.get_string(\n      MESSAGE_KEYS.SEND_FAILURE,\n      \"block_bgwidget\"\n    );\n\n    chatConfig.tokenKey = SESSION_STORAGE_KEYS.TOKEN + chatConfig.bot_id;\n    chatConfig.messagesKey = SESSION_STORAGE_KEYS.MESSAGES + chatConfig.bot_id;\n  }\n\n  /**\n   * Retrieves a data attribute from a DOM element.\n   * @param {string} selector - The selector for the DOM element.\n   * @param {string} attribute - The data attribute to retrieve.\n   * @returns {string|null} The value of the data attribute or null if not found.\n   */\n  function getDataAttribute(selector, attribute) {\n    const value = $(selector).data(attribute);\n    return value !== undefined ? value : null;\n  }\n\n  return {\n    chatConfig: chatConfig,\n    setChatConfig: setChatConfig\n  };\n});"],"names":["define","$","chatConfig","bot_id","env","api_token","user_name","bot_name","api_base_url","SUCCESS_CONECTION_MESSAGE","CONECTION_FAILURE_MESSAGE","SEND_MESSAGE_FAILURE_MESSAGE","CHANNEL_ACRONYM","tokenKey","messagesKey","token","messages","isPinned","SESSION_STORAGE_KEYS","MESSAGE_KEYS","getDataAttribute","selector","attribute","value","data","undefined","setChatConfig","M","util","get_string"],"mappings":"AAAAA,mCAAqB,CAAC,WAAW,SAASC,SAKlCC,WAAa,CACjBC,OAAQ,KACRC,IAAK,KACLC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,0BAA2B,KAC3BC,0BAA2B,KAC3BC,6BAA8B,KAC9BC,gBAAiB,KACjBC,SAAU,KACVC,YAAa,KACbC,MAAO,GACPC,SAAU,GACVC,UAAU,GAINC,2BACG,aADHA,8BAEM,gBAINC,qBACK,6BADLA,qBAEK,6BAFLA,0BAGU,wCAqCPC,iBAAiBC,SAAUC,iBAC5BC,MAAQtB,EAAEoB,UAAUG,KAAKF,uBACdG,IAAVF,MAAsBA,MAAQ,WAGhC,CACLrB,WAAYA,WACZwB,yBArCAxB,WAAWC,OAASiB,iBAAiB,eAAgB,UACrDlB,WAAWE,IAAMgB,iBAAiB,eAAgB,OAClDlB,WAAWG,UAAYe,iBAAiB,eAAgB,aACxDlB,WAAWI,UAAYc,iBAAiB,eAAgB,aACxDlB,WAAWK,SAAWa,iBAAiB,eAAgB,YACvDlB,WAAWM,aAAeY,iBAAiB,eAAgB,gBAE3DlB,WAAWO,0BAA4BkB,EAAEC,KAAKC,WAC5CV,qBACA,kBAEFjB,WAAWQ,0BAA4BiB,EAAEC,KAAKC,WAC5CV,qBACA,kBAEFjB,WAAWS,6BAA+BgB,EAAEC,KAAKC,WAC/CV,0BACA,kBAGFjB,WAAWW,SAAWK,2BAA6BhB,WAAWC,OAC9DD,WAAWY,YAAcI,8BAAgChB,WAAWC"}